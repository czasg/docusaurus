"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4311],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return t?r.createElement(g,i(i({ref:n},u),{},{components:t})):r.createElement(g,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5401:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],s={title:"nginx"},l=void 0,c={unversionedId:"\u90e8\u7f72/nginx",id:"\u90e8\u7f72/nginx",isDocsHomePage:!1,title:"nginx",description:"docker",source:"@site/docs-note/\u90e8\u7f72/nginx.md",sourceDirName:"\u90e8\u7f72",slug:"/\u90e8\u7f72/nginx",permalink:"/docusaurus/note/\u90e8\u7f72/nginx",tags:[],version:"current",frontMatter:{title:"nginx"},sidebar:"tutorialSidebar",previous:{title:"golang",permalink:"/docusaurus/note/\u90e8\u7f72/golang"},next:{title:"postgres",permalink:"/docusaurus/note/\u90e8\u7f72/postgres"}},u=[{value:"docker",id:"docker",children:[],level:2},{value:"docker-compose",id:"docker-compose",children:[],level:2},{value:"kubectl",id:"kubectl",children:[],level:2},{value:"\u6a21\u677f",id:"\u6a21\u677f",children:[{value:"\u9759\u6001\u6587\u4ef6\u914d\u7f6e",id:"\u9759\u6001\u6587\u4ef6\u914d\u7f6e",children:[],level:3}],level:2}],p={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"docker"},"docker"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'script title="\u6307\u5b9a\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6"',script:!0,title:'"\u6307\u5b9a\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6"'},"docker run -it --rm --name nginx-server \\\n    -v default.conf:/etc/nginx/conf.d/default.conf \\\n    -p 8080:80 \\\n    nginx:latest\n")),(0,a.kt)("h2",{id:"docker-compose"},"docker-compose"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="docker-compose.yaml"',title:'"docker-compose.yaml"'},'version: "2.3"\nservices:\n  nginx:\n    image: nginx:latest\n    ports:\n    - "8080:80"\n    volumes:\n      - "default.conf:/etc/nginx/conf.d/default.conf"\n')),(0,a.kt)("h2",{id:"kubectl"},"kubectl"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="nginx-deploy.yaml"',title:'"nginx-deploy.yaml"'},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: nginx\n  name: nginx\nspec:\n  replicas: 2\n  revisionHistoryLimit: 5\n  selector:\n    matchLabels:\n      app: nginx\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: nginx\n      annotations:\n        co.elastic.logs: "true"\n        co.elastic.logs/enabled: "true"\n        co.elastic.logs/json.add_error_key: "true"\n        co.elastic.logs/json.ignore_decoding_error: "true"\n        co.elastic.logs/json.keys_under_root: "false"\n        co.elastic.logs/processors.timestamp.field: json.time\n        co.elastic.logs/processors.timestamp.layouts: UNIX_MS\n        co.elastic.logs/processors.timestamp.timezone: Asia/Shanghai\n        co.elastic.logs/processors.add_fields.fields.index: "nginx"\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:latest\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 80\n              name: 80tcp\n              protocol: TCP\n          readinessProbe:\n            failureThreshold: 3\n            initialDelaySeconds: 10\n            periodSeconds: 30\n            successThreshold: 2\n            tcpSocket:\n               port: 80\n            timeoutSeconds: 10\n          livenessProbe:\n            failureThreshold: 3\n            initialDelaySeconds: 10\n            periodSeconds: 60\n            successThreshold: 1\n            tcpSocket:\n              port: 80\n            timeoutSeconds: 20\n          resources:\n            limits:\n              cpu: 200m\n              memory: 200Mi\n            requests:\n              cpu: 200m\n              memory: 200Mi\n          volumeMounts:\n            - mountPath: /etc/localtime\n              name: host-time\n              readOnly: true\n            - mountPath: /etc/nginx/conf.d/\n              name: nginx-conf\n      restartPolicy: Always\n      volumes:\n        - name: host-time\n          hostPath:\n            path: /etc/localtime\n            type: ""\n        - name: nginx-conf\n          configMap:\n            name: nginx\n            defaultMode: 420\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  ports:\n    - name: http80\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: nginx\n  sessionAffinity: None\n  type: ClusterIP\n---\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: nginx\nspec:\n  rules:\n    - host: nginx.k8s.xyz\n      http:\n        paths:\n          - backend:\n              serviceName: nginx\n              servicePort: 80\n---\n# \u73af\u5883\u53d8\u91cf\u914d\u7f6e\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx\ndata:\n  default.conf: |\n    server {\n        listen  80;\n        location / {\n            root  /static;\n            autoindex  on;\n        }\n    }\n')),(0,a.kt)("h2",{id:"\u6a21\u677f"},"\u6a21\u677f"),(0,a.kt)("h3",{id:"\u9759\u6001\u6587\u4ef6\u914d\u7f6e"},"\u9759\u6001\u6587\u4ef6\u914d\u7f6e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="default.conf"',title:'"default.conf"'},"server {\n    listen  80;\n    server_name  _;\n    proxy_request_buffering  off;\n    proxy_buffering  off;\n    client_max_body_size  0;\n\n    location / {\n        if ( $request_method = 'OPTIONS' ) {\n            add_header  'Access-Control-Allow-Methods' 'OPTIONS,GET';\n            add_header  'Access-Control-Allow-Origin' '*'; \n            add_header  'Access-Control-Allow-Credentials' 'true';\n            add_header  'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';\n            return  204;\n        }\n        root  /static;\n        autoindex  on;\n    }\n}\n")))}d.isMDXComponent=!0}}]);