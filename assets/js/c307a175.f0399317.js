"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5658],{3905:function(n,e,t){t.d(e,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var l=r.createContext({}),c=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},u=function(n){var e=c(n.components);return r.createElement(l.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,i=n.originalType,l=n.parentName,u=s(n,["components","mdxType","originalType","parentName"]),d=c(t),m=o,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||i;return t?r.createElement(g,a(a({ref:e},u),{},{components:t})):r.createElement(g,a({ref:e},u))}));function m(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=n,s.mdxType="string"==typeof n?n:o,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},720:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],s={title:"nginx"},l=void 0,c={unversionedId:"nginx/nginx",id:"nginx/nginx",isDocsHomePage:!1,title:"nginx",description:"nginx \u9759\u6001\u6587\u4ef6\u6a21\u677f",source:"@site/docs-deploy/nginx/nginx.md",sourceDirName:"nginx",slug:"/nginx/nginx",permalink:"/docusaurus/deploy/nginx/nginx",tags:[],version:"current",frontMatter:{title:"nginx"},sidebar:"tutorialSidebar",previous:{title:"intro",permalink:"/docusaurus/deploy/intro"},next:{title:"redis-cluster",permalink:"/docusaurus/deploy/redis/redis-cluster"}},u=[{value:"nginx \u9759\u6001\u6587\u4ef6\u6a21\u677f",id:"nginx-\u9759\u6001\u6587\u4ef6\u6a21\u677f",children:[],level:2},{value:"docker",id:"docker",children:[],level:2},{value:"docker-compose",id:"docker-compose",children:[],level:2},{value:"kubectl",id:"kubectl",children:[],level:2}],p={toc:u};function d(n){var e=n.components,t=(0,o.Z)(n,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"nginx-\u9759\u6001\u6587\u4ef6\u6a21\u677f"},"nginx \u9759\u6001\u6587\u4ef6\u6a21\u677f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="default.conf"',title:'"default.conf"'},"server {\n    listen  80;\n    server_name  _;\n    proxy_request_buffering  off;\n    proxy_buffering  off;\n    client_max_body_size  0;\n\n    location / {\n        if ( $request_method = 'OPTIONS' ) {\n            add_header  'Access-Control-Allow-Methods' '*';\n            add_header  'Access-Control-Allow-Origin' '*'; \n            add_header  'Access-Control-Allow-Headers' '*';\n            add_header  'Access-Control-Allow-Credentials' 'true';\n            return  204;\n        }\n        root  /static;\n        autoindex  on;\n    }\n}\n")),(0,i.kt)("h2",{id:"docker"},"docker"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'script title="docker run \u6307\u5b9a nginx \u9759\u6001\u6587\u4ef6\u6a21\u677f"',script:!0,title:'"docker',run:!0,"\u6307\u5b9a":!0,nginx:!0,'\u9759\u6001\u6587\u4ef6\u6a21\u677f"':!0},"docker run -it --rm --name nginx-server \\\n    -v default.conf:/etc/nginx/conf.d/default.conf \\\n    -p 8080:80 \\\n    nginx:latest\n")),(0,i.kt)("h2",{id:"docker-compose"},"docker-compose"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="docker-compose.yaml"',title:'"docker-compose.yaml"'},'version: "2.3"\nservices:\n  nginx:\n    image: nginx:latest\n    ports:\n    - "8080:80"\n    volumes:\n      - "default.conf:/etc/nginx/conf.d/default.conf"\n')),(0,i.kt)("h2",{id:"kubectl"},"kubectl"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="nginx-deploy.yaml"',title:'"nginx-deploy.yaml"'},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: nginx\n  name: nginx\nspec:\n  replicas: 2\n  revisionHistoryLimit: 5\n  selector:\n    matchLabels:\n      app: nginx\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: nginx\n      annotations:\n        co.elastic.logs: "true"\n        co.elastic.logs/enabled: "true"\n        co.elastic.logs/json.add_error_key: "true"\n        co.elastic.logs/json.ignore_decoding_error: "true"\n        co.elastic.logs/json.keys_under_root: "false"\n        co.elastic.logs/processors.timestamp.field: json.time\n        co.elastic.logs/processors.timestamp.layouts: UNIX_MS\n        co.elastic.logs/processors.timestamp.timezone: Asia/Shanghai\n        co.elastic.logs/processors.add_fields.fields.index: "nginx-test"\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:latest\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 80\n              name: 80tcp\n              protocol: TCP\n          readinessProbe:\n            failureThreshold: 3\n            initialDelaySeconds: 10\n            periodSeconds: 30\n            successThreshold: 2\n            tcpSocket:\n               port: 80\n            timeoutSeconds: 10\n          livenessProbe:\n            failureThreshold: 3\n            initialDelaySeconds: 10\n            periodSeconds: 60\n            successThreshold: 1\n            tcpSocket:\n              port: 80\n            timeoutSeconds: 20\n          resources:\n            limits:\n              cpu: 200m\n              memory: 200Mi\n            requests:\n              cpu: 200m\n              memory: 200Mi\n          volumeMounts:\n            - mountPath: /etc/localtime\n              name: host-time\n              readOnly: true\n            - mountPath: /etc/nginx/conf.d/\n              name: nginx-conf\n      restartPolicy: Always\n      volumes:\n        - name: host-time\n          hostPath:\n            path: /etc/localtime\n            type: ""\n        - name: nginx-conf\n          configMap:\n            name: nginx\n            defaultMode: 420\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  ports:\n    - name: http80\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: nginx\n  sessionAffinity: None\n  type: ClusterIP\n---\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: nginx\nspec:\n  rules:\n    - host: nginx.k8s.xyz\n      http:\n        paths:\n          - backend:\n              serviceName: nginx\n              servicePort: 80\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx\ndata:\n  default.conf: |\n    server {\n        listen  80;\n        location / {\n            root  /static;\n            autoindex  on;\n        }\n    }\n')))}d.isMDXComponent=!0}}]);