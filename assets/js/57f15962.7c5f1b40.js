"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6643],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(t),d=o,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||a;return t?r.createElement(f,s(s({ref:n},l),{},{components:t})):r.createElement(f,s({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[m]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8617:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const a={},s=void 0,i={unversionedId:"k8s/\u914d\u7f6e\u8be6\u89e3/pod",id:"k8s/\u914d\u7f6e\u8be6\u89e3/pod",title:"pod",description:"",source:"@site/docs/k8s/\u914d\u7f6e\u8be6\u89e3/pod.md",sourceDirName:"k8s/\u914d\u7f6e\u8be6\u89e3",slug:"/k8s/\u914d\u7f6e\u8be6\u89e3/pod",permalink:"/docusaurus/docs/k8s/\u914d\u7f6e\u8be6\u89e3/pod",draft:!1,editUrl:"https://github.com/czasg/docusaurus/edit/main/docs/k8s/\u914d\u7f6e\u8be6\u89e3/pod.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Service",permalink:"/docusaurus/docs/k8s/service"},next:{title:"\u5168\u666f\u56fe",permalink:"/docusaurus/docs/mysql/mysql"}},c={},p=[],l={toc:p},m="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(m,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: demo\n  namespace: demo\n  labels:  # object\n    app: demo\n  annotations:  # object\n    app: demo\nspec:\n  replicas: 1\n  revisionHistoryLimit: 5\n  progressDeadlineSeconds: 600\n  selector:\n    matchLabels:\n      name: demo\n  strategy:\n    type: [RollingUpdate | Recreate]\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n  template:\n    metadata:\n      labels:  # object\n        app: demo\n      annotations:  # object\n        app: demo\n    spec:\n      restartPolicy: [Always | Never | OnFailure]\n      nodeSelector:  # object\n        kubernetes.io/hostname: node-1\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: nodeHostName\n                operator: In\n                values:\n                - "node-1"\n      imagePullSecrets:\n      - name: string\n      hostNetowrk: false\n      volumes:\n      - name: emptyDir\n        emptyDir: {}\n      - name: hostPath\n        hostPath:\n          path: /hostPath\n      - name: configMap\n        configMap:\n          name: demoConfigMap\n          items:\n          - key: demo\n            path: /configMap\n      - name: nfs\n        nfs:\n          server: 10.10.10.10\n          path: /nfs\n      containers:\n      - name: demo\n        image: demo:latest\n        imagePullPolicy: [Always | Never | IfNotPresent]\n        command: ["sh", "-c", "sleep 3600"]\n        args: ["-c", "sleep 3600"]\n        workingDir: /workplace\n        securityContext:\n          privileged: [false | true]\n        volumeMounts:\n        - name: emptyDir\n          mountPath: /emptyDir\n          readOnly: [false | true]\n        ports:\n        - name: http\n          containerPort: 8080\n          hostPort: int\n          protocol: string\n        env:\n        - name: APP_NAME\n          value: demo\n        envFrom:\n        - configMapRef:\n            name: demoConfigMap\n        resources:\n          limits:\n            cpu: "1"\n            memory: 200Mi\n          requests:\n            cpu: "1"\n            memory: 200Mi\n        livenessProbe:\n          exec:\n            command: [...string]\n          httpGet:\n            path: string\n            port: int\n            host: string\n            scheme: string\n            httpHeaders:\n            - name: string\n              value: string\n          tcpSocket:\n            port: 8080\n          initialDelaySeconds: 10\n          timeoutSeconds: 5\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 3\n')))}u.isMDXComponent=!0}}]);