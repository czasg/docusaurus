"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4796],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>g});var r=t(7294);function u(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){u(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,u=function(e,n){if(null==e)return{};var t,r,u={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(u[t]=e[t]);return u}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(u[t]=e[t])}return u}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,u=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=c(t),f=u,g=m["".concat(l,".").concat(f)]||m[f]||p[f]||o;return t?r.createElement(g,a(a({ref:n},s),{},{components:t})):r.createElement(g,a({ref:n},s))}));function g(e,n){var t=arguments,u=n&&n.mdxType;if("string"==typeof e||u){var o=t.length,a=new Array(o);a[0]=f;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[m]="string"==typeof e?e:u,a[1]=i;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7130:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=t(7462),u=(t(7294),t(3905));const o={},a=void 0,i={unversionedId:"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5-\u6392\u5e8f-\u5feb\u901f\u6392\u5e8f",id:"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5-\u6392\u5e8f-\u5feb\u901f\u6392\u5e8f",title:"\u7b97\u6cd5-\u6392\u5e8f-\u5feb\u901f\u6392\u5e8f",description:"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",source:"@site/docs/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5-\u6392\u5e8f-\u5feb\u901f\u6392\u5e8f.md",sourceDirName:"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5",slug:"/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5-\u6392\u5e8f-\u5feb\u901f\u6392\u5e8f",permalink:"/docusaurus/docs/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5-\u6392\u5e8f-\u5feb\u901f\u6392\u5e8f",draft:!1,editUrl:"https://github.com/czasg/docusaurus/edit/main/docs/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5-\u6392\u5e8f-\u5feb\u901f\u6392\u5e8f.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"\u7b97\u6cd5-\u6392\u5e8f-\u5f52\u5e76\u6392\u5e8f",permalink:"/docusaurus/docs/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5-\u6392\u5e8f-\u5f52\u5e76\u6392\u5e8f"},next:{title:"\u7b97\u6cd5-\u6392\u5e8f-\u63d2\u5165\u6392\u5e8f",permalink:"/docusaurus/docs/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5-\u6392\u5e8f-\u63d2\u5165\u6392\u5e8f"}},l={},c=[{value:"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",id:"\u65f6\u95f4\u590d\u6742\u5ea6",level:4},{value:"\u539f\u7406\uff08\u964d\u5e8f\uff09\uff1a",id:"\u539f\u7406\u964d\u5e8f",level:4},{value:"\u6b65\u9aa4\uff08\u964d\u5e8f\uff09\uff1a",id:"\u6b65\u9aa4\u964d\u5e8f",level:4}],s={toc:c},m="wrapper";function p(e){let{components:n,...t}=e;return(0,u.kt)(m,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,u.kt)("h4",{id:"\u65f6\u95f4\u590d\u6742\u5ea6"},"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a"),(0,u.kt)("p",null,"O(n^2) ~ O(nlog2n)  "),(0,u.kt)("p",null,"\u6700\u574f\u60c5\u51b5\u4e0b\uff1a\u6bcf\u6b21\u9009\u62e9\u7684\u57fa\u6570\u90fd\u662f\u5f53\u524d\u5e8f\u5217\u4e2d\u7684\u6700\u503c\uff0c\u4f7f\u5f97\u6bcf\u6b21\u5212\u5206\u90fd\u6709\u4e00\u4e2a\u7a7a\u8868\uff0c\u53e6\u4e00\u4e2a\u8868\u4e3a\u539f\u8868\u957f\u5ea6\u51cf\u4e00\u3002\u6240\u4ee5\u590d\u6742\u5ea6\u662f O(n^2)\u3002",(0,u.kt)("br",{parentName:"p"}),"\n","\u6700\u597d\u60c5\u51b5\u4e0b\uff1a\u6bcf\u6b21\u9009\u62e9\u7684\u6280\u672f\u90fd\u53ef\u4ee5\u7b49\u5206\u5e8f\u5217\uff0c\u9700\u8981\u7ecf\u8fc7 log2n \u8d9f\u5212\u5206\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(nlog2n)\u3002"),(0,u.kt)("h4",{id:"\u539f\u7406\u964d\u5e8f"},"\u539f\u7406\uff08\u964d\u5e8f\uff09\uff1a"),(0,u.kt)("p",null,"\u968f\u673a\u6311\u9009\u6216\u6307\u5b9a\u6570\u7ec4\u4e2d\u7684\u67d0\u4e2a\u6570\uff0c\u5c06\u5176\u89c6\u4e3a\u57fa\u51c6\u6570\u636e\uff0c\u7136\u540e\u628a\u5b83\u6392\u653e\u5728\u6b63\u786e\u7684\u4f4d\u7f6e\u3002",(0,u.kt)("br",{parentName:"p"}),"\n","\u7531\u4e8e\u57fa\u51c6\u6570\u636e\u5df2\u7ecf\u6b63\u786e\u6392\u5217\uff0c\u4e0d\u9700\u8981\u989d\u5916\u5904\u7406\uff0c\u6240\u4ee5\u6b64\u65f6\u4ee5\u57fa\u51c6\u6570\u636e\u4e3a\u8fb9\u754c\u8fdb\u884c\u5207\u7247\uff0c\u5f97\u5230\u4e24\u4e2a\u6570\u7ec4\uff0c\u7136\u540e\u4f9d\u6b21\u5bf9\u5de6\u53f3\u4e24\u4e2a\u6570\u636e\u91cd\u590d\u6267\u884c\u5373\u53ef\u3002"),(0,u.kt)("h4",{id:"\u6b65\u9aa4\u964d\u5e8f"},"\u6b65\u9aa4\uff08\u964d\u5e8f\uff09\uff1a"),(0,u.kt)("p",null,"1\u3001\u5728\u6570\u636e\u96c6\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u57fa\u51c6\u6570\u636e\u4e3a x\uff0c\u6700\u5de6\u4fa7\u6570\u636e\u4e3a left\uff0c\u6700\u53f3\u4fa7\u6570\u636e\u4e3a right\uff0c\u7136\u540e\u5f00\u59cb\u5faa\u73af\u6267\u884c\u6b65\u9aa4 2\u30013\u3002",(0,u.kt)("br",{parentName:"p"}),"\n","2\u3001\u4ece right \u4f4d\u7f6e\u5f00\u59cb\u5f80\u5de6\u904d\u5386\uff0c\u76f4\u5230\u83b7\u53d6\u7b2c\u4e00\u4e2a\u6bd4\u57fa\u51c6\u6570\u636e\u5c0f\u7684\u6570\u636e\uff0c\u82e5\u6ca1\u6709\u5219\u9000\u51fa\u5faa\u73af\uff0c\u82e5\u6709\u5219\u5c06\u6b64\u503c\u8d4b\u503c\u7ed9 left\uff0c\u6b64\u65f6 left + 1\u3002",(0,u.kt)("br",{parentName:"p"}),"\n","3\u3001\u4ece left \u4f4d\u7f6e\u5f00\u59cb\u5f80\u53f3\u904d\u5386\uff0c\u76f4\u5230\u83b7\u53d6\u7b2c\u4e00\u4e2a\u6bd4\u57fa\u51c6\u6570\u636e\u5927\u7684\u6570\u636e\uff0c\u82e5\u6ca1\u6709\u5219\u9000\u51fa\u5faa\u73af\uff0c\u82e5\u6709\u5c06\u6b64\u503c\u8d4b\u503c\u7ed9 right\uff0c \u6b64\u65f6 right - 1\u3002\n4\u3001\u6b64\u65f6\u57fa\u51c6\u6570\u636e\u5df2\u7ecf\u627e\u5230\u4e86\u4f4d\u7f6e\uff0c\u4e0d\u9700\u8981\u518d\u79fb\u52a8\u5b83\u4e86\u3002\u6240\u4ee5\u53ef\u4ee5\u6309\u7167\u57fa\u51c6\u6570\u636e\u4e3a\u8fb9\u754c\uff0c\u5212\u5206\u51fa\u5de6\u53f3\u4e24\u4e2a\u5207\u7247\u6570\u7ec4\uff0c\u5206\u522b\u6267\u884c\u6b65\u9aa4 1\u3002 "),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="https://github.com/czasg/strualgo/blob/main/algo/sort/quick.go"',title:'"https://github.com/czasg/strualgo/blob/main/algo/sort/quick.go"'},'package sort\n\nimport (\n    "github.com/czasg/strualgo/basis"\n)\n\nfunc QuickSortASC[Number basis.Number](nums []Number) []Number {\n    newNums := make([]Number, len(nums))\n    for index, num := range nums {\n        newNums[index] = num\n    }\n    var quickSortASC func(nums []Number)\n    quickSortASC = func(nums []Number) {\n        if len(nums) < 2 {\n            return\n        }\n        left := 0\n        right := len(nums) - 1\n        x := nums[left]\n        for {\n            for left < right && nums[right] >= x {\n                right--\n            }\n            if left >= right {\n                break\n            }\n            nums[left] = nums[right]\n            left++\n            for left < right && nums[left] <= x {\n                left++\n            }\n            if left >= right {\n                break\n            }\n            nums[right] = nums[left]\n            right--\n        }\n        nums[left] = x\n        quickSortASC(nums[:left])\n        quickSortASC(nums[right+1:])\n    }\n    quickSortASC(newNums)\n    return newNums\n}\n')))}p.isMDXComponent=!0}}]);