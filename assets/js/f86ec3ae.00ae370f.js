"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3092],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>g});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var l=r.createContext({}),c=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},p=function(n){var e=c(n.components);return r.createElement(l.Provider,{value:e},n.children)},d="mdxType",m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,a=n.originalType,l=n.parentName,p=s(n,["components","mdxType","originalType","parentName"]),d=c(t),u=o,g=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return t?r.createElement(g,i(i({ref:e},p),{},{components:t})):r.createElement(g,i({ref:e},p))}));function g(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=n,s[d]="string"==typeof n?n:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8138:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const a={title:"Nginx",sidebar_label:"Nginx",hide_title:!0,hide_table_of_contents:!1,slug:"nginx"},i=void 0,s={unversionedId:"deploy/nginx",id:"deploy/nginx",title:"Nginx",description:"\u53c2\u8003\u6587\u6863\uff1a",source:"@site/docs/develop/deploy/nginx.md",sourceDirName:"deploy",slug:"/deploy/nginx",permalink:"/docusaurus/docs/develop/deploy/nginx",draft:!1,editUrl:"https://github.com/czasg/docusaurus/edit/main/docs/develop/deploy/nginx.md",tags:[],version:"current",frontMatter:{title:"Nginx",sidebar_label:"Nginx",hide_title:!0,hide_table_of_contents:!1,slug:"nginx"},sidebar:"tutorialSidebar",previous:{title:"MySQL",permalink:"/docusaurus/docs/develop/deploy/mysql"},next:{title:"PostgresQL",permalink:"/docusaurus/docs/develop/deploy/postgres"}},l={},c=[{value:"\u53c2\u8003\u6587\u6863\uff1a",id:"\u53c2\u8003\u6587\u6863",level:4},{value:"Docker \u90e8\u7f72",id:"docker-\u90e8\u7f72",level:3},{value:"K8S \u90e8\u7f72",id:"k8s-\u90e8\u7f72",level:3}],p={toc:c},d="wrapper";function m(n){let{components:e,...t}=n;return(0,o.kt)(d,(0,r.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"\u53c2\u8003\u6587\u6863"},"\u53c2\u8003\u6587\u6863\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://hub.docker.com/r/bitnami/nginx"},"https://hub.docker.com/r/bitnami/nginx"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="nginx \u914d\u7f6e"',title:'"nginx','\u914d\u7f6e"':!0},'# \u7528\u6237\u548c\u7528\u6237\u7ec4\nuser www-data;\n# \u542f\u52a8\u7684\u5de5\u4f5c\u8fdb\u7a0b\u6570\nworker_processes auto;\n# \u9519\u8bef\u65e5\u5fd7\u5b58\u653e\u8def\u5f84\nerror_log /var/log/nginx/error.log;\n# \u8fdb\u7a0b\u6587\u4ef6\u5b58\u653e\u8def\u5f84\npid /var/run/nginx.pid;\n# \u8bbe\u7f6e\u4e8b\u4ef6\u6a21\u578b\uff08\u901a\u5e38\u4e0d\u9700\u8981\u4fee\u6539\uff09\nevents {\n    worker_connections 1024;\n}\n# HTTP\u670d\u52a1\u5668\u914d\u7f6e\nhttp {\n    # \u6587\u4ef6\u6269\u5c55\u540d\u548cMIME\u7c7b\u578b\u6620\u5c04\n    include mime.types;\n    default_type application/octet-stream;\n\n    # \u65e5\u5fd7\u683c\u5f0f\n    log_format main \'$remote_addr - $remote_user [$time_local] "$request" \'\n                    \'$status $body_bytes_sent "$http_referer" \'\n                    \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    # \u8bbf\u95ee\u65e5\u5fd7\u5b58\u653e\u8def\u5f84\n    access_log /var/log/nginx/access.log main;\n\n    # \u4f7f\u7528gzip\u538b\u7f29\n    gzip on;\n    gzip_comp_level 5;\n    gzip_min_length 256;\n    gzip_types application/javascript text/css;\n\n    # \u670d\u52a1\u5668\u5757\u914d\u7f6e\n    server {\n        # \u76d1\u542c\u7684\u7aef\u53e3\n        listen 80;\n        \n        # \u57df\u540d\n        server_name example.com;\n        \n        # \u6839\u76ee\u5f55\n        root /var/www/html;\n        \n        # \u9759\u6001\u6587\u4ef6\u7f13\u5b58\u8bbe\u7f6e\n        location ~* \\.(jpg|jpeg|png|gif|ico|css|js)$ {\n            expires max;\n            log_not_found off;\n        }\n        \n        # \u53cd\u5411\u4ee3\u7406\u914d\u7f6e\u793a\u4f8b\n        location /api/ {\n            proxy_pass http://backend_server;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        }\n        \n        # \u9519\u8bef\u9875\u9762\u914d\u7f6e\n        error_page 404 /404.html;\n        \n        # \u91cd\u5b9a\u5411\u914d\u7f6e\n        location /old-url {\n            return 301 /new-url;\n        }\n        \n        # SSL\u914d\u7f6e\u793a\u4f8b\n        listen 443 ssl;\n        ssl_certificate /path/to/ssl_certificate.crt;\n        ssl_certificate_key /path/to/ssl_certificate.key;\n    }\n}\n')),(0,o.kt)("h3",{id:"docker-\u90e8\u7f72"},"Docker \u90e8\u7f72"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -it --name nginx --hostname nginx -p 80:80 \\\n    -v /path/to/my_server_block.conf:/opt/bitnami/nginx/conf/server_blocks/my_server_block.conf:ro \\\n    bitnami/nginx:latest\n")),(0,o.kt)("h3",{id:"k8s-\u90e8\u7f72"},"K8S \u90e8\u7f72"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: nginx\n  name: nginx\nspec:\n  replicas: 1\n  revisionHistoryLimit: 5\n  selector:\n    matchLabels:\n      app: nginx\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 0\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: nginx\n      annotations:\n        co.elastic.logs: "false"\n        co.elastic.logs/enabled: "false"\n        co.elastic.logs/json.add_error_key: "true"\n        co.elastic.logs/json.ignore_decoding_error: "true"\n        co.elastic.logs/json.keys_under_root: "false"\n        co.elastic.logs/processors.add_fields.fields.index: elk-index-nginx\n        co.elastic.logs/processors.timestamp.field: json.time\n        co.elastic.logs/processors.timestamp.layouts: UNIX_MS\n        co.elastic.logs/processors.timestamp.timezone: Asia/Shanghai\n    spec:\n      hostname: nginx\n      containers:\n        - image: bitnami/nginx:latest\n          imagePullPolicy: Always\n          envFrom:\n            - configMapRef:\n                name: nginx\n          name: nginx\n          livenessProbe:\n            failureThreshold: 3\n            initialDelaySeconds: 300\n            periodSeconds: 20\n            successThreshold: 1\n            tcpSocket:\n              port: 80\n            timeoutSeconds: 5\n          readinessProbe:\n            failureThreshold: 3\n            initialDelaySeconds: 5\n            periodSeconds: 40\n            successThreshold: 1\n            tcpSocket:\n              port: 80\n            timeoutSeconds: 2\n          ports:\n            - containerPort: 80\n              name: nginx\n              protocol: TCP\n          resources:\n            limits:\n              cpu: 1000m\n              memory: 1000Mi\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          volumeMounts:\n            - mountPath: /etc/localtime\n              name: host-time\n              readOnly: true\n            - mountPath: /opt/bitnami/nginx/conf/server_blocks/\n              name: nginx-conf\n      restartPolicy: Always\n      volumes:\n        - hostPath:\n            path: /etc/localtime\n            type: ""\n          name: host-time\n        - name: nginx-conf\n          configMap:\n            name: nginx\n            defaultMode: 420\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  ports:\n    - name: nginx\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: nginx\n  sessionAffinity: None\n  type: ClusterIP\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx\ndata:\n  default.conf: |\n    server {\n        listen  80;\n        location / {\n            root  /static;\n            autoindex  on;\n        }\n    }\n---\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: nginx\n  annotations:\n    nginx.ingress.kubernetes.io/proxy-body-size: "5M"\n    nginx.ingress.kubernetes.io/proxy-connect-timeout: "1200"\n    nginx.ingress.kubernetes.io/proxy-send-timeout: "1200"\n    nginx.ingress.kubernetes.io/proxy-read-timeout: "1200"\nspec:\n  rules:\n    - host: nginx.domain\n      http:\n        paths:\n          - backend:\n              serviceName: nginx\n              servicePort: 80\n')))}m.isMDXComponent=!0}}]);